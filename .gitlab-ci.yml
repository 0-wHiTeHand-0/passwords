stages:
  - prepare
  - testing
  - compiling
  - assembling
  - publishing
  - hooks

image: passwords-builder


Prepare:
  stage: prepare
  script:
    - APP_VERSION=$(node -e "console.log(require('./package.json').version);")
    - PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/passwords/${APP_VERSION}"
    - echo "JOB_ID=\"${CI_JOB_ID}\"" >> variables.env
    - echo "APP_VERSION=\"${APP_VERSION}\"" >> variables.env
    - echo "PACKAGE_REGISTRY_URL=\"${PACKAGE_REGISTRY_URL}\"" >> variables.env
  artifacts:
    paths:
      - ./variables.env
    reports:
      dotenv: variables.env
  only:
    - testing
    - stable

PHPUnit:
  stage: testing
  script:
    - npm run phpunit

Compile:
  stage: compiling
  script:
    - npm ci
    - if [ "${CI_COMMIT_REF_NAME}" == "stable" ] ; then npm run build:stable ; fi
    - if [ "${CI_COMMIT_REF_NAME}" != "stable" ] ; then npm run build:testing ; fi
  artifacts:
    paths:
      - ./src/js/Static/*
      - ./src/l10n/*
      - ./src/css/*

Assemble:
  stage: assembling
  script:
    - mkdir passwords
    - if [ "${CI_COMMIT_REF_NAME}" == "stable" ] ; then php scripts/set-version.php ; fi
    - if [ "${CI_COMMIT_REF_NAME}" != "stable" ] ; then php scripts/set-version.php --nightly --build "${CI_PIPELINE_ID}" ; fi
    - rsync -r --exclude="vue" --exclude="js" --exclude="scss" src/* passwords
    - rsync -r src/js/Static passwords/js/
    - cp CHANGELOG.md passwords/
    - /usr/src/nextcloud/occ integrity:sign-app --path=$(pwd)/passwords --privateKey=${SIGN_KEY} --certificate=${SIGN_CRT}
    - tar -zcf passwords.tar.gz passwords
    - SIGNATURE=$(openssl dgst -sha512 -sign ${SIGN_KEY} ./passwords.tar.gz | openssl base64 | tr -d "\n")
    - echo "SIGNATURE=\"${SIGNATURE}\"" >> variables.env
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./passwords.tar.gz "${PACKAGE_REGISTRY_URL}/passwords.tar.gz"
  artifacts:
    paths:
      - ./passwords.tar.gz
    reports:
      dotenv: variables.env

Assemble Legacy PHP 7.4 Support Release:
  stage: assembling
  script:
    - mkdir passwords-lsr-74
    - rsync -r .patches/lsr-7.4/* src
    - npm run rector:74
    - if [ "${CI_COMMIT_REF_NAME}" == "stable" ] ; then php scripts/set-version.php --lsr 1; fi
    - if [ "${CI_COMMIT_REF_NAME}" != "stable" ] ; then php scripts/set-version.php --lsr 1 --nightly --build "${CI_PIPELINE_ID}" ; fi
    - rsync -r --exclude="vue" --exclude="js" --exclude="scss" src/* passwords-lsr-74
    - rsync -r src/js/Static passwords-lsr-74/js/
    - cp CHANGELOG.md passwords-lsr-74/
    - /usr/src/nextcloud/occ integrity:sign-app --path=$(pwd)/passwords-lsr-74 --privateKey=${SIGN_KEY} --certificate=${SIGN_CRT}
    - tar -zcf passwords-lsr-74.tar.gz passwords-lsr-74 --transform s/passwords-lsr-74/passwords/
    - LSR_74_SIGNATURE=$(openssl dgst -sha512 -sign ${SIGN_KEY} ./passwords-lsr-74.tar.gz | openssl base64 | tr -d "\n")
    - echo "LSR_74_SIGNATURE=\"${LSR_74_SIGNATURE}\"" >> variables.env
  artifacts:
    paths:
      - ./passwords-lsr-74.tar.gz
    reports:
      dotenv: variables.env
  only:
  - stable

Assemble Legacy PHP 8.0 Support Release:
  stage: assembling
  script:
    - mkdir passwords-lsr-80
    - rsync -r .patches/lsr-8.0/* src
    - npm run rector
    - if [ "${CI_COMMIT_REF_NAME}" == "stable" ] ; then php scripts/set-version.php --lsr 2; fi
    - if [ "${CI_COMMIT_REF_NAME}" != "stable" ] ; then php scripts/set-version.php --lsr 2 --nightly --build "${CI_PIPELINE_ID}" ; fi
    - rsync -r --exclude="vue" --exclude="js" --exclude="scss" src/* passwords-lsr-80
    - rsync -r src/js/Static passwords-lsr-80/js/
    - cp CHANGELOG.md passwords-lsr-80/
    - /usr/src/nextcloud/occ integrity:sign-app --path=$(pwd)/passwords-lsr-80 --privateKey=${SIGN_KEY} --certificate=${SIGN_CRT}
    - tar -zcf passwords-lsr-80.tar.gz passwords-lsr-80 --transform s/passwords-lsr-80/passwords/
    - LSR_SIGNATURE=$(openssl dgst -sha512 -sign ${SIGN_KEY} ./passwords-lsr-80.tar.gz | openssl base64 | tr -d "\n")
    - echo "LSR_SIGNATURE=\"${LSR_SIGNATURE}\"" >> variables.env
  artifacts:
    paths:
      - ./passwords-lsr-80.tar.gz
    reports:
      dotenv: variables.env
  only:
  - stable

Publish Package:
  stage: publishing
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - |
      release-cli create --name "Passwords ${APP_VERSION}" --tag-name "${APP_VERSION}.${CI_PIPELINE_ID}" \
        --description "Passwords Nightly Release" \
        --assets-link "{\"name\":\"passwords.tar.gz\",\"url\":\"${PACKAGE_REGISTRY_URL}/passwords.tar.gz\"}"
  only:
  - testing

Publish Nightly:
  stage: publishing
  script:
    - 'curl -f -X POST ${API_URL} -H "Authorization: Token ${API_TOKEN}" -H "Content-Type: application/json" -d "{\"download\":\"${CI_PROJECT_URL}/-/jobs/${JOB_ID}/artifacts/raw/passwords.tar.gz\",\"signature\":\"${SIGNATURE}\",\"nightly\":true}"'
  environment:
    name: Testing
  only:
  - testing

Publish Stable:
  stage: publishing
  script:
    - 'curl -f -X POST ${API_URL} -H "Authorization: Token ${API_TOKEN}" -H "Content-Type: application/json" -d "{\"download\":\"${CI_PROJECT_URL}/-/jobs/${JOB_ID}/artifacts/raw/passwords-lsr-74.tar.gz\",\"signature\":\"${LSR_74_SIGNATURE}\",\"nightly\":false}"'
    - 'curl -f -X POST ${API_URL} -H "Authorization: Token ${API_TOKEN}" -H "Content-Type: application/json" -d "{\"download\":\"${CI_PROJECT_URL}/-/jobs/${JOB_ID}/artifacts/raw/passwords-lsr-80.tar.gz\",\"signature\":\"${LSR_SIGNATURE}\",\"nightly\":false}"'
    - 'curl -f -X POST ${API_URL} -H "Authorization: Token ${API_TOKEN}" -H "Content-Type: application/json" -d "{\"download\":\"${CI_PROJECT_URL}/-/jobs/${JOB_ID}/artifacts/raw/passwords.tar.gz\",\"signature\":\"${SIGNATURE}\",\"nightly\":false}"'
  environment:
    name: Stable
  only:
  - stable

Update Handbook:
  stage: hooks
  script:
    - mkdir -p ~/.ssh/ && cp ${HANDBOOK_PUBLISH_KEY} ~/.ssh/id_ed25519 && chmod 600 ~/.ssh/id_ed25519
    - export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"
    - APP_VERSION=$(node -p "require('./package.json').version")
    - git clone --branch ${CI_COMMIT_REF_NAME} ${HANDBOOK_REPOSITORY} passwords-handbook
    - cd passwords-handbook
    - CURRENT_VERSION=$(node -p "require('./package.json').version")
    - if [ "${CURRENT_VERSION}" == "${APP_VERSION}" ] ; then exit 0 ; fi
    - 'sed -i -e "s|${CURRENT_VERSION}|${APP_VERSION}|g" ./package.json'
    - git config --global user.name "Gitlab CI"
    - git config --global user.email "gitlab@git.mdns.eu"
    - git commit -am "Raise version"
    - git tag "${APP_VERSION}"
    - git push origin
    - git push origin ${APP_VERSION}
    - echo "Raised version from ${CURRENT_VERSION} to ${APP_VERSION}"
  only:
  - stable